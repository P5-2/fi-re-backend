<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fi.re.firebackend.dao.profile.ProfileDao">
    <!-- 회원의 예적금 갯수 조회 -->
    <select id="countMemberSavings" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM MemberSavings
        WHERE username = #{username}
    </select>

    <!-- 회원의 모든 예적금 목록 조회 -->
    <select id="getAllMemberSavings" parameterType="string"
            resultType="fi.re.firebackend.dto.profile.MemberSavingsResponseDto">
        SELECT ms.goalName         AS goalName,
               ms.finPrdtCd        AS finPrdtCd,
               sd.fin_prdt_nm      AS finPrdtNm,
               o.intr_rate_type_nm AS intrRateTypeNm,
               ms.startDate        AS startDate,
               ms.endDate          AS endDate,
               o.intr_rate         AS intrRate,
               o.intr_rate2        AS intrRate2,
               ms.savedAmount      AS savedAmount,
               ms.monthlyDeposit   AS monthlyDeposit,
               sd.kor_co_nm        AS bankName,
               ms.targetAmount     AS targetAmount,
               o.save_trm          AS saveTrm
        FROM MemberSavings ms
                 LEFT JOIN savingsDeposit sd ON ms.finPrdtCd = sd.fin_prdt_cd
                 LEFT JOIN savingsDeposit_options o ON sd.fin_prdt_cd = o.fin_prdt_cd
        WHERE ms.username = #{username}
    </select>

    <!-- 예적금 데이터 삽입 -->
    <insert id="insertMemberSavings" parameterType="fi.re.firebackend.dto.profile.MemberSavingsEntity">
        INSERT INTO MemberSavings (username, goalName, savedAmount, monthlyDeposit, startDate, endDate, finPrdtCd,
                                   targetAmount)
        VALUES (#{username}, #{goalName}, #{savedAmount}, #{monthlyDeposit}, #{startDate}, #{endDate},
                #{finPrdtCd}, #{targetAmount})
    </insert>

    <!-- 예적금 데이터 업데이트 -->
    <update id="updateMemberSavings" parameterType="fi.re.firebackend.dto.profile.MemberSavingsEntity">
        UPDATE MemberSavings
        SET goalName       = #{goalName},
            savedAmount    = #{savedAmount},
            monthlyDeposit = #{monthlyDeposit},
            startDate      = #{startDate},
            endDate        = #{endDate},
            targetAmount   = #{targetAmount}
        WHERE username = #{username}
          AND finPrdtCd = #{finPrdtCd}
    </update>
    <!-- username과 prdNo를 기준으로 row 삭제 -->
    <delete id="deleteMemberSavings" parameterType="map">
        DELETE
        FROM MemberSavings
        WHERE username = #{username}
          AND finPrdtCd = #{finPrdtCd}
    </delete>

    <!-- 이번달, 총 액수 -->
    <select id="fetchAmount" resultType="fi.re.firebackend.dto.profile.EachTransaction">
        SELECT description,
               SUM(CASE
                       WHEN MONTH (transactionDate) = MONTH(CURRENT_DATE)
                     AND YEAR (transactionDate) = YEAR(CURRENT_DATE)
                THEN amount
                ELSE 0
            END)           AS currentMonthDeposit,
               SUM(amount) AS totalAmount
        FROM Transactions
        WHERE username = #{username}
          AND description = #{goalName}
          AND type = '출금';
    </select>

    <select id="getMemberSavingsName" resultType="java.lang.String">
        select goalName
        from membersavings
        where username = #{username}
          and finPrdtCd = #{prdNo}
    </select>

    <!-- 예적금 데이터 업데이트 -->
    <update id="fetchMemberSavings" parameterType="fi.re.firebackend.dto.profile.EachTransaction">
        UPDATE MemberSavings
        SET savedAmount    = #{totalAmount},
            monthlyDeposit = #{currentMonthDeposit}
        WHERE goalName = #{description};
    </update>

</mapper>